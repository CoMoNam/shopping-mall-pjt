services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0.28
    container_name: sm-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Root12345!@
      MYSQL_DATABASE: SMDB
      MYSQL_USER: smuser
      MYSQL_PASSWORD: User12345!@
    ports:
      - "3304:3306"

  # Redis 캐시
  redis:
    image: redis
    container_name: sm-redis
    ports:
      - "6379:6379"

  # Elasticsearch
  elasticsearch:
    build:
      context: .  # 현재 디렉토리 (여기 sm-dockers에 Dockerfile 있음)
      dockerfile: Dockerfile
    container_name: sm-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - xpack.security.http.ssl.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: sm-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENABLED=false
    depends_on:
      - elasticsearch

  # Spring Boot 백엔드
  springboot:
    container_name: sm-spring
    build:
      context: ../
      dockerfile: Dockerfile
    image: sm-spring-img
    ports:
      - "8080:8080"
    restart: always

  # Next.js 프론트엔드
  nextjs:
    container_name: sm-nextjs
    build:
      context: ../../shopping-mall-frontend
      dockerfile: Dockerfile
    image: sm-next-img
    ports:
      - "3000:3000"
    restart: always
    env_file:
      - ../../shopping-mall-frontend/.env.prod

  # node.js express
  nodejs:
    container_name: sm-nodejs
    build:
      context: ../../shopping-mall-node-backend
      dockerfile: Dockerfile
    image: sm-node-img
    ports:
      - "4000:4000"  # 컨테이너 내부 포트 기준 (서버가 4000에서 실행되는 경우)
    restart: always
    environment:
      - NODE_ENV=production
    env_file:
      - ../../shopping-mall-node-backend/.env.prod
volumes:
  esdata:
